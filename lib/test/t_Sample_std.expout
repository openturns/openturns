Testing class Sample
checkConstructorAndDestructor()
checkCopyConstructor()
streamObject(const T & anObject)
class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=1 dimension=1 data=[[0]]
streamObject(const T & anObject)
class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=1 dimension=1 data=[[0]]
areSameObjects(const T & firstObject, const T & secondObject)
areDifferentObjects(const T & firstObject, const T & secondObject)
sample1=class=Sample name=Sample1 implementation=class=SampleImplementation name=Sample1 size=3 dimension=2 data=[[10,20],[11,21],[12,22]]
second element=class=Point name=Unnamed dimension=2 values=[11,21]
sample1=class=Sample name=Sample1 implementation=class=SampleImplementation name=Sample1 size=3 dimension=2 data=[[10,20],[11,21],[1000,2000]]
after a translation of vector=class=Point name=Unnamed dimension=2 values=[5,5] sample1=class=Sample name=Sample1 implementation=class=SampleImplementation name=Sample1 size=3 dimension=2 data=[[15,25],[16,26],[1005,2005]]
after a scaling of vector=class=Point name=Unnamed dimension=2 values=[2,2] sample1=class=Sample name=Sample1 implementation=class=SampleImplementation name=Sample1 size=3 dimension=2 data=[[30,50],[32,52],[2010,4010]]
sample2=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=10 dimension=2 data=[[10,20],[10,20],[10,20],[10,20],[10,20],[10,20],[10,20],[10,20],[10,20],[10,20]]
sample2=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=10 dimension=2 data=[[10,20],[10,20],[10,20],[10,20],[10,20],[11,21],[10,20],[10,20],[10,20],[10,20]]
sample3=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=5 dimension=3 data=[[1000,2000,3000],[1000,2000,3000],[1000,2000,3000],[1000,2000,3000],[1000,2000,3000]]
sample3=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=6 dimension=3 data=[[1000,2000,3000],[1000,2000,3000],[1000,2000,3000],[1000,2000,3000],[1000,2000,3000],[-1000,-2000,-3000]]
sample3=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=7 dimension=3 data=[[1000,2000,3000],[1000,2000,3000],[1000,2000,3000],[1000,2000,3000],[1000,2000,3000],[-1000,-2000,-3000],[1000,2000,3000]]
sample3=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=6 dimension=3 data=[[1000,2000,3000],[1000,2000,3000],[1000,2000,3000],[1000,2000,3000],[1000,2000,3000],[1000,2000,3000]]
sample4=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=4 dimension=2 data=[[10,20],[11,21],[10,20],[10,20]]
sample5=class=Point name=Unnamed dimension=3 values=[1,3,2]
sample5 (linear)=class=Point name=Unnamed dimension=3 values=[1,3,2]
selection=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=5 dimension=1 description=[v0] data=[[3],[1],[2],[3],[2]]
+ Test argsort
    Shuffled :
+ Print the nodes and weights
  size = 15
  dimension = 2
weight, node
0.05 : [0.5, 0.95]
0.05 : [0.5, 0.04]
0.06 : [0.11, 0.23]
0.1 : [0.5, 0.23]
0.03 : [0.88, 0.04]
0.06 : [0.88, 0.23]
0.03 : [0.11, 0.95]
0.07 : [0.11, 0.5]
0.1 : [0.5, 0.76]
0.06 : [0.88, 0.76]
0.07 : [0.88, 0.5]
0.03 : [0.88, 0.95]
0.03 : [0.11, 0.04]
0.06 : [0.11, 0.76]
0.12 : [0.5, 0.5]

    order = [12,2,7,13,6,1,3,14,8,0,4,5,10,9,11]
    Sorted :
+ Print the nodes and weights
  size = 15
  dimension = 2
weight, node
0.03 : [0.11, 0.04]
0.06 : [0.11, 0.23]
0.07 : [0.11, 0.5]
0.06 : [0.11, 0.76]
0.03 : [0.11, 0.95]
0.05 : [0.5, 0.04]
0.1 : [0.5, 0.23]
0.12 : [0.5, 0.5]
0.1 : [0.5, 0.76]
0.05 : [0.5, 0.95]
0.03 : [0.88, 0.04]
0.06 : [0.88, 0.23]
0.07 : [0.88, 0.5]
0.06 : [0.88, 0.76]
0.03 : [0.88, 0.95]

    orderDecreasing = [11,9,10,5,4,0,8,14,3,1,6,13,7,2,12]
sample5.add(sample5)=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=6 dimension=1 data=[[1],[3],[2],[1],[3],[2]]
sample5.stack(sample5)=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=6 dimension=2 data=[[1,1],[3,3],[2,2],[1,1],[3,3],[2,2]]
