myFunction=class=LinearFunction name=linearFunction implementation=class=FunctionImplementation name=linearFunction description=[x0,x1,x2,y0,y1] evaluationImplementation=class=LinearEvaluation name=Unnamed center=class=Point name=Unnamed dimension=3 values=[-1,0.5,1] constant=class=Point name=Unnamed dimension=2 values=[-1,2] linear=class=Matrix implementation=class=MatrixImplementation name=Unnamed rows=3 columns=2 values=[1,3,5,2,4,6] gradientImplementation=class=ConstantGradient name=Unnamed constant=class=Matrix implementation=class=MatrixImplementation name=Unnamed rows=3 columns=2 values=[1,3,5,2,4,6] hessianImplementation=class=NullHessian name=Unnamed inputDimension=3 outputDimension=2
linearFunction( class=Point name=Unnamed dimension=3 values=[7,8,9] ) = class=Point name=Unnamed dimension=2 values=[69.5,96]
linearFunction.gradient( class=Point name=Unnamed dimension=3 values=[7,8,9] ) = class=Matrix implementation=class=MatrixImplementation name=Unnamed rows=3 columns=2 values=[1,3,5,2,4,6]
linearFunction.hessian( class=Point name=Unnamed dimension=3 values=[7,8,9] ) = class=SymmetricTensor implementation=class=TensorImplementation name=Unnamed rows=3 columns=3 sheets=2 values=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
