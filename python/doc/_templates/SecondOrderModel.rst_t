{{ objname }}
{{ underline }}{{ underline }}

.. plot::
    :include-source: False

    import openturns as ot
    from matplotlib import pyplot as plt
    from openturns.viewer import View
    secondOrderModel = ot.{{ objname }}()
    if secondOrderModel.getInputDimension() == 1:
	scale = secondOrderModel.getCovarianceModel().getScale()[0]
        def f(x):
            return [secondOrderModel.computeCovariance(x)[0, 0]]
        func = ot.PythonFunction(1,1,f)
        func.setDescription(['$tau$', '$cov$'])
        cov_graph = func.draw(-3.0 * scale, 3.0 * scale, 129)
	# Sepctral density
	def g(x):
            return [secondOrderModel.computeSpectralDensity(x)[0, 0]]
        func2 = ot.PythonFunction(1,1,f)
        func2.setDescription(['$f$', '$spd$'])
	spec_graph = func2.draw(1, 10, 129)
        fig = plt.figure(figsize=(10, 4))
        plt.suptitle(str(secondOrderModel))
        cov_axis = fig.add_subplot(121)
        View(cov_graph, figure=fig, axes=[cov_axis], add_legend=False)
        spec_axis = fig.add_subplot(122)
        View(spec_graph, figure=fig, axes=[spec_axis], add_legend=False)

.. currentmodule:: {{ module }}

.. autoclass:: {{ objname }}

  {% block methods %}
   .. automethod:: __init__
   {% endblock %}
