%feature("docstring") OT::JoeCopula
"JoeValue copula.

Available constructor:
    JoeCopula(*theta*, *psi1*, *psi2*)

Parameters
----------
theta : :class:`~openturns.Scalar`
    Parameter :math:`\theta`. By default, it is the constant scalar equal to 0.5.

psi1 : :class:`~openturns.Scalar`
    Parameter :math:`\psi_1`. By default, it is the constant scalar equal to 0.5.

psi2 : :class:`~openturns.Scalar`
    Parameter :math:`\psi_2`. By default, it is the constant scalar equal to 0.5.


Notes
-----
The Joe copula is a bivariate copula defined by:

.. math::

    C(u_1, u_2) = \exp\left[\log(u_1u_2)A\left(\dfrac{\log u_2}{\log u_1u_2}\right)\right]

for :math:`(u_1, u_2) \in [0, 1]^2`

Where :math:`A` is the following Pickand function 
 :math:`t \in [0,1]`, :math:`A(t) = 1 - [ (\psi_1 (1-t))^{-1/ \theta} + (\psi_2 t)^{-1/ \theta}    ]^{- \theta}`

See also
--------
Copula, ExtremeValueCopula

Examples
--------
Create a distribution:

>>> import openturns as ot
>>> copula = ot.JoeCopula(0.5, 0.5, 0.5)

Draw a sample:

>>> sample = copula.getSample(5)"

// ---------------------------------------------------------------------

%feature("docstring") OT::JoeCopula::getTheta
"Get the Joe copula parameter :math:`\theta`.

Returns
-------
theta : :class:`~openturns.Scalar`
        The scalar parameter :math:`\theta > 0`.
"

// ---------------------------------------------------------------------

%feature("docstring") OT::JoeCopula::setTheta
"Set the Joe copula parameter :math:`\theta`.

Parameters
----------
theta : :class:`~openturns.Scalar`
        The scalar parameter :math:`\theta > 0`.
"

// ---------------------------------------------------------------------


%feature("docstring") OT::JoeCopula::getPsi1
"Get the Joe copula parameter :math:`\psi_1`.

Returns
-------
psi1 : :class:`~openturns.Scalar`
       The scalar parameter :math:`1> \psi_1 > 0`.
"

// ---------------------------------------------------------------------

%feature("docstring") OT::JoeCopula::setPsi1
"Set the Joe copula parameter :math:`\psi_1`.

Parameters
----------
psi1 : :class:`~openturns.Scalar`
       The scalar parameter :math:`1> \psi_1 > 0`.
"

// ---------------------------------------------------------------------

%feature("docstring") OT::JoeCopula::getPsi2
"Get the Joe copula parameter :math:`\psi_2`.

Returns
-------
psi2 : :class:`~openturns.Scalar`
       The scalar parameter :math:`1> \psi_2 > 0`.
"

// ---------------------------------------------------------------------

%feature("docstring") OT::JoeCopula::setPsi2
"Set the Joe copula parameter :math:`\psi_2`.

Parameters
----------
psi2 : :class:`~openturns.Scalar`
       The scalar parameter :math:`1> \psi_2 > 0`.
"

// ---------------------------------------------------------------------
