%feature("docstring") OT::IterativeThresholdExceedance
"Iterative minimum and maximum.

Available constructor:
    IterativeThresholdExceedance(dimension, thresholdValue)

Parameters
----------
dimension : UnsignedInteger
    Dimension of the input data (default : 1)
dimension : Scalar
    Dimension of the input data (default : 0.0)

Notes
-----
This class iteratively count the threshold exceedance of the input :class:`~openturns.Point` or :class:`~openturns.Sample`.

This class don't store the input data in memory.

See also
--------
IterativeAlgorithm

Examples
--------
>>> import openturns as ot
>>> ot.RandomGenerator.SetSeed(0)
>>> dim = 5
>>> threshold =0.5
>>> myThresholdExceedance = ot.IterativeThresholdExceedance(dim, threshold)
>>> n = ot.Normal(dim)
>>> size = 50
>>> for i in range(size):
>>>     point = n.getRealization()
>>>     myThresholdExceedance.increment(point)
>>>
>>> print (myThresholdExceedance.getThresholdExceedance())
"

// ---------------------------------------------------------------------

%feature("docstring") OT::IterativeThresholdExceedance::getMin
"Returns the number of threshold exceedances component per component

Returns
-------
thresholdExceedance : :class:`~openturns.Point`
    current number of threshold exceedances component per component."

// ---------------------------------------------------------------------

%feature("docstring") OT::IterativeThresholdExceedance::getThresholdValue
"Returns the value of the threshold

Returns
-------
thresholdValue : :class:`~openturns.Scalar`
    the value of the threshold."
