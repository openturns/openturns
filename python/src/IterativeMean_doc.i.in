%feature("docstring") OT::IterativeMean
"Iterative sample mean.

Available constructor:
    IterativeMean(dimension)

Parameters
----------
dimension : UnsignedInteger
    Dimension of the input data

Notes
-----
This class iteratively computes the sample mean :math:`\mu^{}_{i}` of several :class:`~openturns.Point` or :class:`~openturns.Sample`.

This mean is defined as:

.. math::

   \begin{array}{cccc}
      \mu^{}_{0} & = & 0 & \\
      \mu^{}_{i} & = & \mu^{}_{i-1} + \frac{1}{i}(u(i) - \mu^{}_{i-1}) & \forall i \in \mathbb{N}^{*}
   \end{array}

With :math:`u(i)` the :math:`i^{th}` input point.

See also
--------
IterativeAlgorithm

Examples
--------
>>> import openturns as ot
>>> ot.RandomGenerator.SetSeed(0)
>>> dim = 5
>>> myMean = ot.IterativeMean(dim)
>>> n = ot.Normal(dim)
>>> size = 50
>>>
>>> # increment with 50 points
>>> for i in range(size):
>>>     point = n.getRealization()
>>>     myMean.increment(point)
>>>
>>> print (myMean.getIteration())
>>> print (myMean.getMean())
>>>
>>> # increment with one sample of size 50
>>> sample = n.getSample(size)
>>> myMean.increment(sample)
>>>
>>> print (myMean.getIteration())
>>> print (myMean.getMean())
"

// ---------------------------------------------------------------------


%feature("docstring") OT::IterativeMean::getMean
"Returns the values of the mean

Returns
-------
mean : :class:`~openturns.Point`
    current values of the iterative mean."
