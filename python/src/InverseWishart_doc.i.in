%feature("docstring") OT::InverseWishart
"Inverse-Wishart distribution.

Parameters
----------
V : 2-d sequence of float
    Scale matrix, positive definite of size :math:`p`.
nu : float, :math:`\nu > p - 1`
    Degrees of freedom.

Examples
--------
Create a distribution:

>>> import openturns as ot
>>> distribution = ot.InverseWishart(ot.CovarianceMatrix([[1.0]]), 3.0)

Draw a sample:

>>> sample = distribution.getSample(5)"

// ---------------------------------------------------------------------

%feature("docstring") OT::InverseWishart::getNu
"Accessor to the degrees of freedom parameter.

Returns
-------
nu : float
    Degrees of freedom."

// ---------------------------------------------------------------------

%feature("docstring") OT::InverseWishart::setNu
"Accessor to the degrees of freedom parameter.

Parameters
----------
nu : float, :math:`\nu > 0`
    Degrees of freedom."

// ---------------------------------------------------------------------

%feature("docstring") OT::InverseWishart::getV
"Accessor to the scale parameter.

Returns
-------
V : :class:`~openturns.CovarianceMatrix`
    Scale matrix, positive definite of size :math:`p`."

// ---------------------------------------------------------------------

%feature("docstring") OT::InverseWishart::setV
"Accessor to the scale parameter.

Parameters
----------
V : 2-d sequence of float
    Scale matrix, positive definite of size :math:`p`."

// ---------------------------------------------------------------------

%feature("docstring") OT::InverseWishart::getRealizationAsMatrix
"Get one realization of the distribution as a covariance matrix.

Returns
-------
V : :class:`~openturns.CovarianceMatrix`
    A realization as a matrix"
