%feature("docstring") OT::FunctionalChaosSobolIndices
"Sensitivity analysis based on functional chaos expansion.

Parameters
----------
result : :class:`~openturns.FunctionalChaosResult`
    A functional chaos result resulting from a polynomial chaos decomposition.

See also
--------
FunctionalChaosAlgorithm, FunctionalChaosResult

Notes
-----
This structure is created from a FunctionalChaosResult in order to evaluate the
Sobol' indices associated to the polynomial chaos decomposition of the model. 
The SobolIndicesAlgorithm.DrawSobolIndices static method can be used to 
draw the indices.

Examples
--------
Create a polynomial chaos for the Ishigami function:

>>> import openturns as ot
>>> from math import pi
>>> import openturns.viewer as otv

Create the function:

>>> ot.RandomGenerator.SetSeed(0)
>>> formula = ['sin(X1) + 7. * sin(X2)^2 + 0.1 * X3^4 * sin(X1)']
>>> input_names = ['X1', 'X2', 'X3']
>>> g = ot.SymbolicFunction(input_names, formula)

Create the probabilistic model:

>>> distributionList = [ot.Uniform(-pi, pi)] * 3
>>> distribution = ot.ComposedDistribution(distributionList)

Create a training sample:

>>> N = 100 
>>> inputTrain = distribution.getSample(N)
>>> outputTrain = g(inputTrain)

Create the chaos:

>>> chaosalgo = ot.FunctionalChaosAlgorithm(inputTrain, outputTrain)
>>> chaosalgo.run()
>>> result = chaosalgo.getResult()

Print Sobol' indices :

>>> chaosSI = ot.FunctionalChaosSobolIndices(result) 
>>> #print( chaosSI.summary() )

Get first order Sobol' indices for X0:

>>> s0 = chaosSI.getSobolIndex(0)

Get total order Sobol' indices for X0:

>>> st0 = chaosSI.getSobolTotalIndex(0)

Get first order Sobol' indices for group [X0,X1]:

>>> stg01 = chaosSI.getSobolGroupedIndex([0,1])

Get total order Sobol' indices for group [X1,X2]:

>>> stg12 = chaosSI.getSobolGroupedTotalIndex([1,2])"

// ---------------------------------------------------------------------

%feature("docstring") OT::FunctionalChaosSobolIndices::getFunctionalChaosResult
"Accessor to the functional chaos result.

Returns
-------
functionalChaosResult : :class:`~openturns.FunctionalChaosResult`
    The functional chaos result resulting from a polynomial chaos decomposition."

// ---------------------------------------------------------------------

%feature("docstring") OT::FunctionalChaosSobolIndices::getSobolIndex
"Get the first order Sobol' index of an input variable.

Parameters
----------
i : int or sequence of int, :math:`0 \leq i < d - 1`
    Indice(s) of the variable(s) we want the associated Sobol indices. :math:`d`
    is the dimension of the input variables.
marginalIndex : int
    Output marginal index.
    Default value is 0, i.e. the first output.

Returns
-------
s : float
    The first order Sobol index."

// ---------------------------------------------------------------------

%feature("docstring") OT::FunctionalChaosSobolIndices::getSobolTotalIndex
"Get the total Sobol' index of an input variable.

Parameters
----------
i : int or sequence of int, :math:`0 \leq i < d - 1`
    Indice(s) of the variable(s) we want the associated total Sobol indices.
    :math:`d` is the dimension of the input variables.
marginalIndex : int
    Output marginal index.
    Default value is 0, i.e. the first output.

Returns
-------
s : float
    The total Sobol index."

// ---------------------------------------------------------------------

%feature("docstring") OT::FunctionalChaosSobolIndices::getSobolGroupedIndex
"Get the grouped Sobol first order (closed) indices of a group of input variables.

Let :math:`d \in \mathbb{N}` the dimension of the input random vector.
Let :math:`\bdu \subseteq \{0, ..., d - 1\}` be a group of input variables. 
The first order (closed) Sobol' index of a group of input variables :math:`\bdu`
is:

.. math::
    S_{\bdu}^{\operatorname{cl}}
    = \frac{\variance{\expectation{Y|\vect{X}_{\bdu}}}}{\variance{Y}}

Parameters
----------
i : int or sequence of int, :math:`0 \leq i < d - 1`
    Indice(s) of the variable(s) we want the associated grouped first order (closed) Sobol indices.
    :math:`d` is the dimension of the input variables.
marginalIndex : int
    Output marginal index.
    Default value is 0, i.e. the first output.

Returns
-------
s : float
    The grouped Sobol' first order index."

// ---------------------------------------------------------------------

%feature("docstring") OT::FunctionalChaosSobolIndices::getSobolGroupedTotalIndex
"Get the grouped Sobol' total order index of a group of input variables.


Let :math:`d \in \mathbb{N}` the dimension of the input random vector.
Let :math:`\bdu \subseteq \{0, ..., d - 1\}` be a group of input variables. 
The first order (closed) Sobol' index of a group of variables :math:`\bdu`
is:

.. math::
    S^T_\bdu 
    = \frac{\sum_{\bdv\cap\bdu\neq\emptyset} \var(h_\bdv(\bX_\bdv))}{\var(Y)}

where :math:`h_\bdv` is the function of the variables in the group :math:`\bdv`
of the functional Sobol'-Hoeffding ANOVA decomposition of the physical model.

For any group of variables :math:`\bdu`, 
the total and first order (closed) Sobol' indices are related by the equation:

.. math::
    S^T_\bdu + S_{\overline{\bdu}}^{\operatorname{cl}} = 1

where :math:`\overline{\bdu}` is the complementary group of :math:`\bdu`.

Parameters
----------
i : int or sequence of int, :math:`0 \leq i < d - 1`
    Indice(s) of the variable(s) we want the associated grouped total Sobol' indices.
    :math:`d` is the dimension of the input variables.
marginalIndex : int
    Output marginal index.
    Default value is 0, i.e. the first output.

Returns
-------
s : float
    The grouped Sobol' total order index."

// ---------------------------------------------------------------------

%feature("docstring") OT::FunctionalChaosSobolIndices::getSobolGroupedInteractionIndex
"Get the grouped Sobol' interaction indices.

Let :math:`d \in \mathbb{N}` the dimension of the input random vector.
Let :math:`\bdu \subseteq \{0, ..., d - 1\}` be a group of input variables. 
The first order interaction Sobol' index of a group of variables :math:`\bdu`
is:

.. math::
    S_\bdu = \frac{V_\bdu}{\var(Y)} = \frac{\var(h_\bdu(\bX_\bdu)}{\var(Y)}.

where :math:`h_\bdu` is the function of the input variables in the group :math:`\bdu`
of the functional Sobol'-Hoeffding ANOVA decomposition of the physical model.

Parameters
----------
i : int or sequence of int, :math:`0 \leq i < d - 1`
    Indice(s) of the variable(s) we want the associated grouped interaction Sobol' indices.
    :math:`d` is the dimension of the input variables.
marginalIndex : int
    Output marginal index.
    Default value is 0, i.e. the first output.

Returns
-------
s : float
    The grouped Sobol' interaction index."
