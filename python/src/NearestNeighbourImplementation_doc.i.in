%define OT_NearestNeighbour_doc
"Base class to define an algorithm to search for nearest neighbours of
a list of points.

Available constructors:
    NearestNeighbour()
    
    NearestNeighbour(*sample*)

Parameters
----------
sample : :class:`~openturns.Sample`
    Input points.

See also
--------
KDTree, RegularGridNearestNeighbour

>>> import openturns as ot
>>> sample = ot.Normal(2).getSample(10)
>>> finder = ot.NearestNeighbour(sample)
>>> neighbour = finder.getNearestNeighbour([0.1, 0.2])"
%enddef

%feature("docstring") OT::NearestNeighbourImplementation
OT_NearestNeighbour_doc

// ---------------------------------------------------------------------

%define OT_NearestNeighbour_getNearestNeighbourIndex_doc
"Get the index of the nearest neighbour of the given point.

Parameters
----------
point : sequence of float
    Given point.

Returns
-------
index : int
    Index of the nearest neighbour of the given point."
%enddef

%feature("docstring") OT::NearestNeighbourImplementation::getNearestNeighbourIndex
OT_NearestNeighbour_getNearestNeighbourIndex_doc

// ---------------------------------------------------------------------

%define OT_NearestNeighbour_getNearestNeighbour_doc
"Get the nearest neighbour of the given point.

Parameters
----------
point : sequence of float
    Given point.

Returns
-------
nearestPoint : :class:`~openturns.Point`
    Nearest neighbour of the given point."
%enddef

%feature("docstring") OT::NearestNeighbourImplementation::getNearestNeighbour
OT_NearestNeighbour_getNearestNeighbour_doc

// ---------------------------------------------------------------------

%define OT_NearestNeighbour_getNearestNeighboursIndices_doc
"Get the indices of nearest neighbours of the given point.

Parameters
----------
point : sequence of float
    Given point.
k : int
    Number of indices to return.
sorted : bool, optional
    Boolean to tell whether returned indices are sorted according to
    the distance to the given point.

Returns
-------
indices : sequence of int
    Indices of the `k` nearest neighbours of the given point."
%enddef

%feature("docstring") OT::NearestNeighbourImplementation::getNearestNeighboursIndices
OT_NearestNeighbour_getNearestNeighboursIndices_doc

// ---------------------------------------------------------------------

%define OT_NearestNeighbour_getNearestNeighbours_doc
"Get the nearest neighbours of the given point.

Parameters
----------
point : sequence of float
    Given point.
k : int
    Number of points to return.
sorted : bool, optional
    Boolean to tell whether returned points are sorted according to
    their distance to the given point.

Returns
-------
neighbours : :class:`~openturns.Sample`
    :class:`~openturns.Sample` containing the `k` nearest neighbours of the given point."
%enddef

%feature("docstring") OT::NearestNeighbourImplementation::getNearestNeighbours
OT_NearestNeighbour_getNearestNeighbours_doc

