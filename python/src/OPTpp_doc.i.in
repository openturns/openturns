%feature("docstring") OT::OPTpp
"Interface to OPTpp.

This class exposes the solvers from the non-linear optimization library OPT++ [meza2007]_.
It provides mainly several Newton's methods and nonlinear interior-point algorithms.
More details about available algorithms are available `here <https://software.sandia.gov/opt++/opt++2.4_doc/html/MethodsDoc.html>`_.

Parameters
----------
problem : :class:`~openturns.OptimizationProblem`
    Optimization problem to solve.
algoName : str
    The identifier of the algorithm.
    Use :func:`GetAlgorithmNames()` to list available names.

See also
--------
AbdoRackwitz, Cobyla, SQP, TNC, NLopt

Examples
--------
>>> import openturns as ot
>>> dim = 4
>>> bounds = ot.Interval([-3.0] * dim, [5.0] * dim)
>>> linear = ot.SymbolicFunction(['x1', 'x2', 'x3', 'x4'], ['x1+2*x2-3*x3+4*x4'])
>>> problem = ot.OptimizationProblem(linear, ot.Function(), ot.Function(), bounds)
>>> # print(ot.OPTpp.GetAlgorithmNames())
>>> # [OptBaNewton,OptBaQNewton,OptBCEllipsoid,...
>>> # algo = ot.OPTpp(problem, 'OptBCEllipsoid')
>>> # algo.setStartingPoint([0.0] * 4)
>>> # algo.run()
>>> # result = algo.getResult()
>>> # x_star = result.getOptimalPoint()
>>> # y_star = result.getOptimalValue()

Notes
-----
Here are some properties of the different algorithms:

+-------------------+-------------------+--------------------+
| Algorithm         | Derivative info   | Constraint support |
+===================+===================+====================+
| OptGSS            | no derivative     | none               |
+-------------------+-------------------+--------------------+
| OptPDS            | no derivative     | none               |
+-------------------+-------------------+--------------------+
| OptCG             | first derivative  | none               |
+-------------------+-------------------+--------------------+
| OptLBFGS          | first derivative  | none               |
+-------------------+-------------------+--------------------+
| OptQNewton        | first derivative  | none               |
+-------------------+-------------------+--------------------+
| OptFDNewton       | first derivative  | none               |
+-------------------+-------------------+--------------------+
| OptConstrFDNewton | first derivative  | none               |
+-------------------+-------------------+--------------------+
| OptConstrQNewton  | first derivative  | none               |
+-------------------+-------------------+--------------------+
| OptBCQNewton      | first derivative  | bounds required    |
+-------------------+-------------------+--------------------+
| OptBaQNewton      | first derivative  | bounds required    |
+-------------------+-------------------+--------------------+
| OptBCFDNewton     | first derivative  | none               |
+-------------------+-------------------+--------------------+
| OptBCEllipsoid    | first derivative  | bounds required    |
+-------------------+-------------------+--------------------+
| OptFDNIPS         | first derivative  | all                |
+-------------------+-------------------+--------------------+
| OptQNIPS          | first derivative  | all                |
+-------------------+-------------------+--------------------+
| OptNewton         | second derivative | none               |
+-------------------+-------------------+--------------------+
| OptConstrNewton   | second derivative | none               |
+-------------------+-------------------+--------------------+
| OptBCNewton       | second derivative | bounds required    |
+-------------------+-------------------+--------------------+
| OptBaNewton       | second derivative | bounds required    |
+-------------------+-------------------+--------------------+
| OptNIPS           | second derivative | all                |
+-------------------+-------------------+--------------------+
| OptDHNIPS         | second derivative | bounds             |
+-------------------+-------------------+--------------------+"


// ---------------------------------------------------------------------

%feature("docstring") OT::OPTpp::GetAlgorithmNames
"Accessor to the list of algorithms provided by OPTpp, by names.

Returns
-------
names : :class:`~openturns.Description`
    List of algorithm names provided by OPTpp, according to its naming convention.

Examples
--------
>>> import openturns as ot
>>> print(ot.OPTpp.GetAlgorithmNames())
[OptBaNewton,OptBaQNewton,OptBCEllipsoid,..."

// ---------------------------------------------------------------------

%feature("docstring") OT::OPTpp::IsAvailable
"Ask whether OPTpp support is available.

Returns
-------
available : bool
    Whether OPTpp support is available."

// ---------------------------------------------------------------------

%feature("docstring") OT::OPTpp::setMinimumStep
"Minimum step accessor.

Parameters
----------
minimumStep : float
    Lower bound on the length of the step that can be taken at each iteration.
    The default can be tweaked with the `OPTpp-DefaultMinimumStep` key from
    :class:`~openturns.ResourceMap`."

// ---------------------------------------------------------------------

%feature("docstring") OT::OPTpp::getMinimumStep
"Minimum step accessor.

Returns
-------
minimumStep : float
    Lower bound on the length of the step that can be taken at each iteration."

// ---------------------------------------------------------------------

%feature("docstring") OT::OPTpp::setMaximumStep
"Maximum step accessor.

Parameters
----------
maximumStep : float
    Upper bound on the length of the step that can be taken at each iteration.
    The default can be tweaked with the `OPTpp-DefaultMaximumStep` key from
    :class:`~openturns.ResourceMap`."

// ---------------------------------------------------------------------

%feature("docstring") OT::OPTpp::getMaximumStep
"Maximum step accessor.

Returns
-------
maximumStep : float
    Upper bound on the length of the step that can be taken at each iteration"

// ---------------------------------------------------------------------

%feature("docstring") OT::OPTpp::setLineSearchTolerance
"Line search tolerance accessor.

Parameters
----------
lineSearchTolerance : float
    Tolerance on the function value decrease during the line search step.
    The default can be tweaked with the `OPTpp-DefaultLineSearchTolerance` key from
    :class:`~openturns.ResourceMap`."

// ---------------------------------------------------------------------

%feature("docstring") OT::OPTpp::getLineSearchTolerance
"Line search tolerance accessor.

Returns
-------
lineSearchTolerance : float
    Tolerance on the function value decrease during the line search step."

// ---------------------------------------------------------------------

%feature("docstring") OT::OPTpp::setMaximumLineSearchIterationNumber
"Maximum line search iteration number accessor.

Parameters
----------
maximumLineSearchIterationNumber : int
    Maximum number of line search iterations.
    The default can be tweaked with the `OPTpp-DefaultMaximumLineSearchIterationNumber` key from
    :class:`~openturns.ResourceMap`."

// ---------------------------------------------------------------------

%feature("docstring") OT::OPTpp::getMaximumLineSearchIterationNumber
"Maximum line search iteration number accessor.

Parameters
----------
maximumLineSearchIterationNumber : int
    Maximum number of line search iterations."

// ---------------------------------------------------------------------

%feature("docstring") OT::OPTpp::setTrustRegionSize
"Trust region size accessor.

Parameters
----------
trustRegionSize : float
    Value of the trust region.
    Only relevant for algorithm with a trust-region or a trustpds search strategy
    The default can be tweaked with the `OPTpp-DefaultTrustRegionSize` key from
    :class:`~openturns.ResourceMap`."

// ---------------------------------------------------------------------

%feature("docstring") OT::OPTpp::getTrustRegionSize
"Trust region size accessor.

Parameters
----------
trustRegionSize : float
    Value of the trust region."
