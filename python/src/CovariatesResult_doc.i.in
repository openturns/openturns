%feature("docstring") OT::CovariatesResult
"Distribution factory result for non stationary likelihood estimation.


We consider a non stationary model with densitiy parameterized by :math:`\vect{\theta} = (\theta^1(t), \dots, \theta^d(t))` depending on time :math:`t`. We refer to this model as Parent Distribution.

Each of :math:`\theta^j(t)` for :math:`1 \leq j \leq d`  has an expression in terms of a parameter vector and covariates:

.. math::

    \theta^j(t)  = h\left(\sum_{i=1}^{d_{j}} \beta_i^{j} X_i^{j}(t)\right)


where :math:`h: \Rset \mapsto \Rset` is usually referred to as the *inverse-link function*.
The functions :math:`X_i^{j}` are scalar functions :math:`\Rset \mapsto \Rset`  and the :math:`\beta_i^{j} \in Rset`.

We denote by :math:`\vect{\beta} = (\beta_1^{1}, \dots, \beta_{d_1}^{1}, \dots, \beta_1^{d}, \dots, \beta_{d_d}^{d})` the complete vector of parameters.

The estimator of vector  :math:`\vect{\beta}` maximizes the likelihood of the Parent distribution.

Parameters
----------
factory : :class:`~openturns.DistributionFactory`
    Parent distribution factory.
parameterFunction : :class:`~openturns.Function`
    The  function :math:`\vect{\theta}`.
timeStamps : 2-d sequence of float
    Values of :math:`t`.
parameterDistribution : :class:`~openturns.Distribution`
    The distribution of :math:`\vect{\beta}`.
llh : float
    Maximum log-likelihood.

See also
--------
GeneralizedExtremeValueFactory"

// ---------------------------------------------------------------------

%feature("docstring") OT::CovariatesResult::getDistribution
"Accessor to the Parent distribution at a given time.

Parameters
----------
t : float
    Time value.

Returns
-------
distribution : :class:`~openturns.Distribution`
    The Parent distribution at time :math:`t`."

// ------------------Time stamps---------------------------------------------------

%feature("docstring") OT::CovariatesResult::getParameterDistribution
"Accessor to the distribution of :math:`\vect{\beta}`.

Returns
-------
parameterDistribution : :class:`~openturns.Distribution`
    The distribution of the  estimator of :math:`\vect{\beta}`."

// ---------------------------------------------------------------------

%feature("docstring") OT::CovariatesResult::setParameterDistribution
"Accessor to the distribution of of :math:`\vect{\beta}`.

Parameters
----------
parameterDistribution : :class:`~openturns.Distribution`
    The distribution of the estimator of :math:`\vect{\beta}`."

// ---------------------------------------------------------------------

%feature("docstring") OT::CovariatesResult::getParameterFunction
"Parameter function accessor.

Returns
-------
parameterFunction : :class:`~openturns.Function`
    The  function :math:`t \mapsto \vect{\theta}(t)`."

// ---------------------------------------------------------------------

%feature("docstring") OT::CovariatesResult::getNormalizationFunction
"Normalizing function accessor.

Returns
-------
normalizeFunction : :class:`~openturns.Function`
    The  function :math:`t \mapsto _tau(t)`."


// ---------------------------------------------------------------------

%feature("docstring") OT::CovariatesResult::getOptimalParameter
"Optimal parameter accessor.

Returns
-------
optimalParameter : :class:`~openturns.Point`
    Optimal vector of parameters :math:`\vect{\beta}`.
"

// ---------------------------------------------------------------------

%feature("docstring") OT::CovariatesResult::setLogLikelihood
"Optimal likelihood value accessor.

Parameters
----------
llh : float
    Maximum log-likelihood.
"

// ---------------------------------------------------------------------

%feature("docstring") OT::CovariatesResult::getLogLikelihood
"Optimal likelihood value accessor.

Returns
-------
llh : float
    Maximum log-likelihood.
"

// ---------------------------------------------------------------------

%feature("docstring") OT::CovariatesResult::drawParameterFunction
"Draw the parameter function.

Parameters
----------
parameterIndex : int, 
    The index specifying the marginal of :math:`\vect{\theta}`.

Returns
-------
graph : :class:`~openturns.Graph`
    Graph of :math:`\theta^j(t)`.
"

// ---------------------------------------------------------------------

%feature("docstring") OT::CovariatesResult::drawQuantileFunction
"Draw the quantile function.

The quantile function is the function :math:`t \mapsto q_p(t)` where :math:`q_p(t)` is the quantile of order :math:`p` of the Parent distribution at time :math:`t`.

Parameters
----------
p : float
    The quantile level.

Returns
-------
graph : :class:`~openturns.Graph`
    Quantile function graph."
