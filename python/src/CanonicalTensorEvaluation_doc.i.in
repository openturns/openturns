%feature("docstring") OT::CanonicalTensorEvaluation
"Canonical tensor format evaluation.

Available constructor:
    CanonicalTensorEvaluation(*functionFamilies, nk, rank*)

Parameters
----------
functionFamilies : sequence of :class:`~openturns.OrthogonalUniVariateFunctionFamily`
    The basis factory.
nk : sequence of int
    Maximum basis order along each component.
rank : int, optional (default=1)
    rank of tensor

See also
--------
TensorApproximationAlgorithm

Examples
--------
>>> import openturns as ot
>>> dim = 3
>>> nk = [10] * dim
>>> factoryCollection = [ot.FourierSeriesFactory()] * dim
>>> rank = 2
>>> tensor = ot.CanonicalTensorEvaluation(factoryCollection, nk, rank)"

// ---------------------------------------------------------------------

%feature("docstring") OT::CanonicalTensorEvaluation::getFunctionFamilies
"Accessor to the Basis.

Returns
-------
functionFamilies : sequence of :class:`~openturns.OrthogonalUniVariateFunctionFamily`
    The basis factory."

// ---------------------------------------------------------------------

%feature("docstring") OT::CanonicalTensorEvaluation::getRank
"Rank accessor.

Returns
-------
rank : int
    rank of tensor"

// ---------------------------------------------------------------------

%feature("docstring") OT::CanonicalTensorEvaluation::setRank
"Rank accessor.

Parameters
----------
rank : int
    rank of tensor"

// ---------------------------------------------------------------------

%feature("docstring") OT::CanonicalTensorEvaluation::getDegrees
"Rank accessor.

Returns
-------
nk : :class:`~openturns.Indices`
    Maximum basis order along each component."

// ---------------------------------------------------------------------

%feature("docstring") OT::CanonicalTensorEvaluation::getBasis
"Accessor to the basis.

Parameters
----------
j : int
    Component index

Returns
-------
basis : :class:`~openturns.Basis`
    Basis for component j."

// ---------------------------------------------------------------------

%feature("docstring") OT::CanonicalTensorEvaluation::getCoefficients
"Accessor to the coefficients.

Parameters
----------
i : int
    Rank index
j : int
    Component index

Returns
-------
beta : :class:`~openturns.Point`
    Coefficients for rank i and component j."

// ---------------------------------------------------------------------

%feature("docstring") OT::CanonicalTensorEvaluation::setCoefficients
"Accessor to the coefficients.

Parameters
----------
i : int
    Rank index
j : int
    Component index
beta : sequence of float
    Coefficients for rank i and component j"

// ---------------------------------------------------------------------

%feature("docstring") OT::CanonicalTensorEvaluation::getMarginalRank
"Marginal tensor accessor.

Parameters
----------
i : int
    Rank index

Returns
-------
tensor : :class:`~openturns.CanonicalTensorEvaluation`
    Tensor data for rank i."
