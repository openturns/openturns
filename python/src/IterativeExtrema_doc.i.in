%feature("docstring") OT::IterativeExtrema
"Iterative minimum and maximum.

Available constructor:
    IterativeExtrema(dimension)

Parameters
----------
dimension : UnsignedInteger
    Dimension of the input data

Notes
-----
This class iteratively computes the min and the max of several :class:`~openturns.Point` or :class:`~openturns.Sample`.

This class don't store the input data in memory.

See also
--------
IterativeAlgorithm

Examples
--------
>>> import openturns as ot
>>> ot.RandomGenerator.SetSeed(0)
>>> dim = 5
>>> myExtrema = ot.IterativeExtrema(dim)
>>> n = ot.Normal(dim)
>>> size = 50
>>> for i in range(size):
>>>     point = n.getRealization()
>>>     myExtrema.increment(point)
>>>
>>> print (myExtrema.getMin())
>>> print (myExtrema.getMax())
"

// ---------------------------------------------------------------------

%feature("docstring") OT::IterativeExtrema::getMin
"Returns the values of the minimum over the inputs component per component

Returns
-------
min : :class:`~openturns.Point`
    current values of the iterative min."

// ---------------------------------------------------------------------

%feature("docstring") OT::IterativeExtrema::getMax
"Returns the values of the maximum over the inputs component per component

Returns
-------
max : :class:`~openturns.Point`
    current values of the iterative max."
