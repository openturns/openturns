test number zero : default & copy constructors and string converter
LM =  class=LinearModel name=Unnamed regression=class=NumericalPoint name=Unnamed dimension=1 values=[12] confidence intervals=[ [-1; 36.92]] p-Values=[1]
emptyLM =  class=LinearModel name=Unnamed regression=class=NumericalPoint name=Unnamed dimension=1 values=[12] confidence intervals=[ [12; 12]] p-Values=[0]
test number one : get elements
LM.getRegression =  class=NumericalPoint name=Unnamed dimension=1 values=[12]
LM.getConfidenceIntervals =  [ [-1; 36.92]]
LM.getPValues =  [1]
test number two : get predicted/residual
LM.getPredicted =  class=NumericalSample name=Unnamed implementation=class=NumericalSampleImplementation name=Unnamed size=20 dimension=1 data=[[-5.90042],[-1.21708],[3.49272],[7.6831],[10.8684],[12.6795],[12.9064],[11.5229],[8.68929],[4.734],[0.115426],[-4.63113],[-8.95554],[-12.3566],[-14.4402],[-14.9647],[-13.8695],[-11.2814],[-7.50044],[-2.96476]]
LM.getResidual =  class=NumericalSample name=Unnamed implementation=class=NumericalSampleImplementation name=Unnamed size=20 dimension=1 data=[[-0.0589069],[0.0316584],[-0.0236475],[-0.0483521],[0.0227129],[0.0367317],[0.0357011],[0.0321055],[-0.0273235],[-0.0498224],[0.0383126],[-0.0421222],[-0.0249526],[0.039543],[0.0227439],[0.0117943],[0.0321329],[0.0281066],[-0.0531531],[-0.00326265]]
