myAntecedentProcess =  ARMA(X_{0,t} = E_{0,t}, E_t ~ Normal(mu = 0, sigma = 1))
myCompositeProcess =  class=CompositeProcess function=class=FieldFunction name=Unnamed implementation=class=VertexValueFunction evaluation=class=Function name=Unnamed implementation=class=FunctionImplementation name=Unnamed description=[t,x,y0] evaluationImplementation=class=SymbolicEvaluation name=Unnamed inputVariablesNames=[t,x] outputVariablesNames=[y0] formulas=[t+0.1*x^2] gradientImplementation=class=SymbolicGradient name=Unnamed evaluation=class=SymbolicEvaluation name=Unnamed inputVariablesNames=[t,x] outputVariablesNames=[y0] formulas=[t+0.1*x^2] hessianImplementation=class=SymbolicHessian name=Unnamed evaluation=class=SymbolicEvaluation name=Unnamed inputVariablesNames=[t,x] outputVariablesNames=[y0] formulas=[t+0.1*x^2] antecedent=class= ARMA timeGrid=class=RegularGrid name=Unnamed start=0 step=0.1 n=11 coefficients AR=class=ARMACoefficients coefficients MA=class=ARMACoefficients noiseDistribution= class=Normal name=Normal dimension=1 mean=class=Point name=Unnamed dimension=1 values=[0] sigma=class=Point name=Unnamed dimension=1 values=[1] correlationMatrix=class=CorrelationMatrix dimension=1 implementation=class=MatrixImplementation name=Unnamed rows=1 columns=1 values=[1] state= class= ARMAState x= class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=0 dimension=1 data=[] epsilon= class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=0 dimension=1 data=[]
One realization= 
     [ t        y0       ]
 0 : [ 0        0.475844 ]
 1 : [ 0.1      0.112253 ]
 2 : [ 0.2      0.212603 ]
 3 : [ 0.3      0.506569 ]
 4 : [ 0.4      0.465718 ]
 5 : [ 0.5      0.56291  ]
 6 : [ 0.6      0.622139 ]
 7 : [ 0.7      0.706813 ]
 8 : [ 0.8      1.32444  ]
 9 : [ 0.9      1.06458  ]
10 : [ 1        1.17208  ]
future=     [ t       y0      ]
0 : [ 1.1     1.10082 ]
1 : [ 1.2     1.29916 ]
2 : [ 1.3     1.30194 ]
3 : [ 1.4     1.43138 ]
4 : [ 1.5     1.51985 ]
My antecedent process =  CompositeProcess(FieldFunction :
  [x1,x2]->[x1^2,abs(x2)](GaussianProcess(trend=[x0,x1]->[0,0], covariance=ExponentialModel(scale=[0.2,0.3], amplitude=[1,1], no spatial correlation)))
My dynamical function =  FieldFunction :
  [x1,x2]->[x1^2,x1+x2]
