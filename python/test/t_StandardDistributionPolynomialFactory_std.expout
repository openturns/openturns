polynomialFactory( Laplace = class=StandardDistributionPolynomialFactory hasSpecificFamily=false orthonormalization algorithm=class=OrthonormalizationAlgorithm implementation=class=AdaptiveStieltjesAlgorithm measure=class=Laplace name=Laplace dimension=1 mu=0 lambda=1 monicRecurrenceCoefficients=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=2 dimension=3 data=[[1,0,0],[1,0,-2]] monicSquaredNorms=class=Point name=Unnamed dimension=2 values=[1,2] isElliptical=true )
Laplace  polynomial( 0 )= 1
Laplace  polynomial( 1 )= 0.7071 * X
Laplace  polynomial( 2 )= -0.4472 + 0.2236 * X^2
Laplace  polynomial( 3 )= -0.5774 * X + 0.04811 * X^3
Laplace  polynomial( 4 )= 0.3297 - 0.2565 * X^2 + 0.007633 * X^4
Laplace  polynomial( 4 ) roots= [-5.68,-1.157,1.157,5.68]
Laplace  polynomial( 4 ) nodes= [-5.68,-1.157,1.157,5.68]  and weights= [0.01069,0.4893,0.4893,0.01069]
M=
 5x5
[[ 1 0 0 0 0 ]
 [ 0 1 0 0 0 ]
 [ 0 0 1 0 0 ]
 [ 0 0 0 1 0 ]
 [ 0 0 0 0 1 ]]
polynomialFactory( Logistic = class=StandardDistributionPolynomialFactory hasSpecificFamily=false orthonormalization algorithm=class=OrthonormalizationAlgorithm implementation=class=AdaptiveStieltjesAlgorithm measure=class=Logistic name=Logistic dimension=1 mu=0 beta=1 monicRecurrenceCoefficients=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=2 dimension=3 data=[[1,0,0],[1,0,-3.29]] monicSquaredNorms=class=Point name=Unnamed dimension=2 values=[1,3.29] isElliptical=true )
Logistic  polynomial( 0 )= 1
Logistic  polynomial( 1 )= 0.5513 * X
Logistic  polynomial( 2 )= -0.559 + 0.1699 * X^2
Logistic  polynomial( 3 )= -0.4913 * X + 0.03555 * X^3
Logistic  polynomial( 4 )= 0.4219 - 0.2058 * X^2 + 0.005614 * X^4
Logistic  polynomial( 4 ) roots= [-5.872,-1.476,1.476,5.872]
Logistic  polynomial( 4 ) nodes= [-5.872,-1.476,1.476,5.872]  and weights= [0.01719,0.4828,0.4828,0.01719]
M=
 5x5
[[ 1 0 0 0 0 ]
 [ 0 1 0 0 0 ]
 [ 0 0 1 0 0 ]
 [ 0 0 0 1 0 ]
 [ 0 0 0 0 1 ]]
polynomialFactory( Normal = class=StandardDistributionPolynomialFactory hasSpecificFamily=true specificFamily=class=OrthogonalUniVariatePolynomialFamily implementation=class=HermiteFactory measure=class=Normal name=Normal dimension=1 mean=class=Point name=Unnamed dimension=1 values=[0] sigma=class=Point name=Unnamed dimension=1 values=[1] correlationMatrix=class=CorrelationMatrix dimension=1 implementation=class=MatrixImplementation name=Unnamed rows=1 columns=1 values=[1] )
Normal  polynomial( 0 )= 1
Normal  polynomial( 1 )= X
Normal  polynomial( 2 )= -0.7071 + 0.7071 * X^2
Normal  polynomial( 3 )= -1.225 * X + 0.4082 * X^3
Normal  polynomial( 4 )= 0.6124 - 1.225 * X^2 + 0.2041 * X^4
Normal  polynomial( 4 ) roots= [-2.334,-0.742,0.742,2.334]
Normal  polynomial( 4 ) nodes= [-2.334,-0.742,0.742,2.334]  and weights= [0.04588,0.4541,0.4541,0.04588]
M=
 5x5
[[ 1 0 0 0 0 ]
 [ 0 1 0 0 0 ]
 [ 0 0 1 0 0 ]
 [ 0 0 0 1 0 ]
 [ 0 0 0 0 1 ]]
polynomialFactory( Normal = class=StandardDistributionPolynomialFactory hasSpecificFamily=false orthonormalization algorithm=class=OrthonormalizationAlgorithm implementation=class=AdaptiveStieltjesAlgorithm measure=class=Normal name=Normal dimension=1 mean=class=Point name=Unnamed dimension=1 values=[1] sigma=class=Point name=Unnamed dimension=1 values=[1] correlationMatrix=class=CorrelationMatrix dimension=1 implementation=class=MatrixImplementation name=Unnamed rows=1 columns=1 values=[1] monicRecurrenceCoefficients=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=2 dimension=3 data=[[1,-1,0],[1,-1,-1]] monicSquaredNorms=class=Point name=Unnamed dimension=2 values=[1,1] isElliptical=true )
Normal  polynomial( 0 )= 1
Normal  polynomial( 1 )= -1 + X
Normal  polynomial( 2 )= -1.414 * X + 0.7071 * X^2
Normal  polynomial( 3 )= 0.8165 - 1.225 * X^2 + 0.4082 * X^3
Normal  polynomial( 4 )= -0.4082 + 1.633 * X - 0.8165 * X^3 + 0.2041 * X^4
Normal  polynomial( 4 ) roots= [-1.334,0.258,1.742,3.334]
Normal  polynomial( 4 ) nodes= [-1.334,0.258,1.742,3.334]  and weights= [0.04588,0.4541,0.4541,0.04588]
M=
 5x5
[[ 1 0 0 0 0 ]
 [ 0 1 0 0 0 ]
 [ 0 0 1 0 0 ]
 [ 0 0 0 1 0 ]
 [ 0 0 0 0 1 ]]
polynomialFactory( Rayleigh = class=StandardDistributionPolynomialFactory hasSpecificFamily=false orthonormalization algorithm=class=OrthonormalizationAlgorithm implementation=class=AdaptiveStieltjesAlgorithm measure=class=Rayleigh name=Rayleigh dimension=1 beta=1 gamma=0 monicRecurrenceCoefficients=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=2 dimension=3 data=[[1,-1.253,0],[1,-1.667,-0.4292]] monicSquaredNorms=class=Point name=Unnamed dimension=2 values=[1,0.4292] isElliptical=false )
Rayleigh  polynomial( 0 )= 1
Rayleigh  polynomial( 1 )= -1.913 + 1.526 * X
Rayleigh  polynomial( 2 )= 2.846 - 5.006 * X + 1.714 * X^2
Rayleigh  polynomial( 3 )= -3.784 + 10.86 * X - 7.934 * X^2 + 1.607 * X^3
Rayleigh  polynomial( 4 )= 4.724 - 19.44 * X + 22.57 * X^2 - 9.593 * X^3 + 1.322 * X^4
Rayleigh  polynomial( 4 ) roots= [0.3961,1.177,2.201,3.484]
Rayleigh  polynomial( 4 ) nodes= [0.3961,1.177,2.201,3.484]  and weights= [0.228,0.5385,0.2216,0.01196]
M=
 5x5
[[ 1 0 0 0 0 ]
 [ 0 1 0 0 0 ]
 [ 0 0 1 0 0 ]
 [ 0 0 0 1 0 ]
 [ 0 0 0 0 1 ]]
polynomialFactory( Student = class=StandardDistributionPolynomialFactory hasSpecificFamily=false orthonormalization algorithm=class=OrthonormalizationAlgorithm implementation=class=AdaptiveStieltjesAlgorithm measure=class=Student name=Student dimension=1 nu=22 mean=class=Point name=Unnamed dimension=1 values=[0] sigma=class=Point name=Unnamed dimension=1 values=[1] correlationMatrix=class=CorrelationMatrix dimension=1 implementation=class=MatrixImplementation name=Unnamed rows=1 columns=1 values=[1] monicRecurrenceCoefficients=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=2 dimension=3 data=[[1,0,0],[1,0,-1.1]] monicSquaredNorms=class=Point name=Unnamed dimension=2 values=[1,1.1] isElliptical=true )
Student  polynomial( 0 )= 1
Student  polynomial( 1 )= 0.9535 * X
Student  polynomial( 2 )= -0.6547 + 0.5951 * X^2
Student  polynomial( 3 )= -1.019 * X + 0.278 * X^3
Student  polynomial( 4 )= 0.513 - 0.8394 * X^2 + 0.1018 * X^4
Student  polynomial( 4 ) roots= [-2.754,-0.8153,0.8153,2.754]
Student  polynomial( 4 ) nodes= [-2.754,-0.8153,0.8153,2.754]  and weights= [0.03145,0.4685,0.4685,0.03145]
M=
 5x5
[[ 1 0 0 0 0 ]
 [ 0 1 0 0 0 ]
 [ 0 0 1 0 0 ]
 [ 0 0 0 1 0 ]
 [ 0 0 0 0 1 ]]
polynomialFactory( Triangular = class=StandardDistributionPolynomialFactory hasSpecificFamily=false orthonormalization algorithm=class=OrthonormalizationAlgorithm implementation=class=AdaptiveStieltjesAlgorithm measure=class=Triangular name=Triangular dimension=1 a=-1 m=0.3 b=1 monicRecurrenceCoefficients=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=2 dimension=3 data=[[1,-0.1,0],[1,0.01534,-0.1717]] monicSquaredNorms=class=Point name=Unnamed dimension=2 values=[1,0.1717] isElliptical=false )
Triangular  polynomial( 0 )= 1
Triangular  polynomial( 1 )= -0.2414 + 2.414 * X
Triangular  polynomial( 2 )= -0.8773 - 0.4288 * X + 5.065 * X^2
Triangular  polynomial( 3 )= 0.2596 - 4.137 * X - 1.018 * X^2 + 10.37 * X^3
Triangular  polynomial( 4 )= 0.8781 + 0.9256 * X - 13.52 * X^2 - 1.996 * X^3 + 21.18 * X^4
Triangular  polynomial( 4 ) roots= [-0.7429,-0.2358,0.3104,0.7626]
Triangular  polynomial( 4 ) nodes= [-0.7429,-0.2358,0.3104,0.7626]  and weights= [0.08109,0.3346,0.4564,0.1278]
M=
 5x5
[[ 1 0 0 0 0 ]
 [ 0 1 0 0 0 ]
 [ 0 0 1 0 0 ]
 [ 0 0 0 1 0 ]
 [ 0 0 0 0 1 ]]
polynomialFactory( Uniform = class=StandardDistributionPolynomialFactory hasSpecificFamily=true specificFamily=class=OrthogonalUniVariatePolynomialFamily implementation=class=LegendreFactory measure=class=Uniform name=Uniform dimension=1 a=-1 b=1 )
Uniform  polynomial( 0 )= 1
Uniform  polynomial( 1 )= 1.732 * X
Uniform  polynomial( 2 )= -1.118 + 3.354 * X^2
Uniform  polynomial( 3 )= -3.969 * X + 6.614 * X^3
Uniform  polynomial( 4 )= 1.125 - 11.25 * X^2 + 13.12 * X^4
Uniform  polynomial( 4 ) roots= [-0.8611,-0.34,0.34,0.8611]
Uniform  polynomial( 4 ) nodes= [-0.8611,-0.34,0.34,0.8611]  and weights= [0.1739,0.3261,0.3261,0.1739]
M=
 5x5
[[ 1 0 0 0 0 ]
 [ 0 1 0 0 0 ]
 [ 0 0 1 0 0 ]
 [ 0 0 0 1 0 ]
 [ 0 0 0 0 1 ]]
polynomialFactory( Uniform = class=StandardDistributionPolynomialFactory hasSpecificFamily=true specificFamily=class=OrthogonalUniVariatePolynomialFamily implementation=class=HistogramPolynomialFactory measure=class=Histogram name=Histogram dimension=1 first=-1 width=class=Point name=Unnamed dimension=1 values=[4] height=class=Point name=Unnamed dimension=1 values=[0.25] legendre=class=LegendreFactory measure=class=Uniform name=Uniform dimension=1 a=-1 b=1 )
Uniform  polynomial( 0 )= 1
Uniform  polynomial( 1 )= -0.866 + 0.866 * X
Uniform  polynomial( 2 )= -0.2795 - 1.677 * X + 0.8385 * X^2
Uniform  polynomial( 3 )= 1.158 + 0.4961 * X - 2.48 * X^2 + 0.8268 * X^3
Uniform  polynomial( 4 )= -0.8672 + 2.344 * X + 2.109 * X^2 - 3.281 * X^3 + 0.8203 * X^4
Uniform  polynomial( 4 ) roots= [-0.7223,0.32,1.68,2.722]
Uniform  polynomial( 4 ) nodes= [-0.7223,0.32,1.68,2.722]  and weights= [0.1739,0.3261,0.3261,0.1739]
M=
 5x5
[[ 1 0 0 0 0 ]
 [ 0 1 0 0 0 ]
 [ 0 0 1 0 0 ]
 [ 0 0 0 1 0 ]
 [ 0 0 0 0 1 ]]
polynomialFactory( WeibullMin = class=StandardDistributionPolynomialFactory hasSpecificFamily=false orthonormalization algorithm=class=OrthonormalizationAlgorithm implementation=class=AdaptiveStieltjesAlgorithm measure=class=WeibullMin name=WeibullMin dimension=1 beta=1 alpha=3 gamma=0 monicRecurrenceCoefficients=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=2 dimension=3 data=[[1,-0.893,0],[1,-0.9475,-0.1053]] monicSquaredNorms=class=Point name=Unnamed dimension=2 values=[1,0.1053] isElliptical=false )
WeibullMin  polynomial( 0 )= 1
WeibullMin  polynomial( 1 )= -2.751 + 3.081 * X
WeibullMin  polynomial( 2 )= 5.392 - 13.4 * X + 7.279 * X^2
WeibullMin  polynomial( 3 )= -8.918 + 36.53 * X - 42.85 * X^2 + 14.98 * X^3
WeibullMin  polynomial( 4 )= 13.33 - 79.23 * X + 149.5 * X^2 - 111 * X^3 + 28.1 * X^4
WeibullMin  polynomial( 4 ) roots= [0.3158,0.737,1.2,1.698]
WeibullMin  polynomial( 4 ) nodes= [0.3158,0.737,1.2,1.698]  and weights= [0.1096,0.4912,0.3644,0.03483]
M=
 5x5
[[ 1 0 0 0 0 ]
 [ 0 1 0 0 0 ]
 [ 0 0 1 0 0 ]
 [ 0 0 0 1 0 ]
 [ 0 0 0 0 1 ]]
polynomialFactory( Beta = class=StandardDistributionPolynomialFactory hasSpecificFamily=true specificFamily=class=OrthogonalUniVariatePolynomialFamily implementation=class=JacobiFactory alpha=1 beta=0 measure=class=Beta name=Beta dimension=1 alpha=1 beta=2 a=-1 b=1 )
Beta  polynomial( 0 )= 1
Beta  polynomial( 1 )= 0.7071 + 2.121 * X
Beta  polynomial( 2 )= -0.866 + 1.732 * X + 4.33 * X^2
Beta  polynomial( 3 )= -0.75 - 3.75 * X + 3.75 * X^2 + 8.75 * X^3
Beta  polynomial( 4 )= 0.8385 - 3.354 * X - 11.74 * X^2 + 7.826 * X^3 + 17.61 * X^4
Beta  polynomial( 4 ) roots= [-0.8858,-0.4463,0.1672,0.7205]
Beta  polynomial( 4 ) nodes= [-0.8858,-0.4463,0.1672,0.7205]  and weights= [0.271,0.4069,0.2597,0.06236]
M=
 5x5
[[ 1 0 0 0 0 ]
 [ 0 1 0 0 0 ]
 [ 0 0 1 0 0 ]
 [ 0 0 0 1 0 ]
 [ 0 0 0 0 1 ]]
polynomialFactory( Beta = class=StandardDistributionPolynomialFactory hasSpecificFamily=true specificFamily=class=OrthogonalUniVariatePolynomialFamily implementation=class=ChebychevFactory measure=class=Arcsine name=Arcsine dimension=1 a=-1 b=1 )
Beta  polynomial( 0 )= 1
Beta  polynomial( 1 )= 1.414 * X
Beta  polynomial( 2 )= -1.414 + 2.828 * X^2
Beta  polynomial( 3 )= -4.243 * X + 5.657 * X^3
Beta  polynomial( 4 )= 1.414 - 11.31 * X^2 + 11.31 * X^4
Beta  polynomial( 4 ) roots= [-0.9239,-0.3827,0.3827,0.9239]
Beta  polynomial( 4 ) nodes= [-0.9239,-0.3827,0.3827,0.9239]  and weights= [0.25,0.25,0.25,0.25]
M=
 5x5
[[ 1 0 0 0 0 ]
 [ 0 1 0 0 0 ]
 [ 0 0 1 0 0 ]
 [ 0 0 0 1 0 ]
 [ 0 0 0 0 1 ]]
polynomialFactory( Beta = class=StandardDistributionPolynomialFactory hasSpecificFamily=false orthonormalization algorithm=class=OrthonormalizationAlgorithm implementation=class=AdaptiveStieltjesAlgorithm measure=class=Beta name=Beta dimension=1 alpha=0.5 beta=0.5 a=-2 b=3 monicRecurrenceCoefficients=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=2 dimension=3 data=[[1,-0.5,0],[1,-0.5,-3.125]] monicSquaredNorms=class=Point name=Unnamed dimension=2 values=[1,3.125] isElliptical=true )
Beta  polynomial( 0 )= 1
Beta  polynomial( 1 )= -0.2828 + 0.5657 * X
Beta  polynomial( 2 )= -1.301 - 0.4525 * X + 0.4525 * X^2
Beta  polynomial( 3 )= 0.8033 - 1.426 * X - 0.5431 * X^2 + 0.362 * X^3
Beta  polynomial( 4 )= 0.9798 + 1.665 * X - 1.376 * X^2 - 0.5793 * X^3 + 0.2896 * X^4
Beta  polynomial( 4 ) roots= [-1.81,-0.4567,1.457,2.81]
Beta  polynomial( 4 ) nodes= [-1.81,-0.4567,1.457,2.81]  and weights= [0.25,0.25,0.25,0.25]
M=
 5x5
[[ 1 0 0 0 0 ]
 [ 0 1 0 0 0 ]
 [ 0 0 1 0 0 ]
 [ 0 0 0 1 0 ]
 [ 0 0 0 0 1 ]]
polynomialFactory( Gamma = class=StandardDistributionPolynomialFactory hasSpecificFamily=false orthonormalization algorithm=class=OrthonormalizationAlgorithm implementation=class=AdaptiveStieltjesAlgorithm measure=class=Gamma name=Gamma dimension=1 k=1 lambda=3 gamma=0 monicRecurrenceCoefficients=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=2 dimension=3 data=[[1,-0.3333,0],[1,-1,-0.1111]] monicSquaredNorms=class=Point name=Unnamed dimension=2 values=[1,0.1111] isElliptical=false )
Gamma  polynomial( 0 )= 1
Gamma  polynomial( 1 )= -1 + 3 * X
Gamma  polynomial( 2 )= 1 - 6 * X + 4.5 * X^2
Gamma  polynomial( 3 )= -1 + 9 * X - 13.5 * X^2 + 4.5 * X^3
Gamma  polynomial( 4 )= 1 - 12 * X + 27 * X^2 - 18 * X^3 + 3.375 * X^4
Gamma  polynomial( 4 ) roots= [0.1075,0.5819,1.512,3.132]
Gamma  polynomial( 4 ) nodes= [0.1075,0.5819,1.512,3.132]  and weights= [0.6032,0.3574,0.03889,0.0005393]
M=
 5x5
[[ 1 0 0 0 0 ]
 [ 0 1 0 0 0 ]
 [ 0 0 1 0 0 ]
 [ 0 0 0 1 0 ]
 [ 0 0 0 0 1 ]]
polynomialFactory( Arcsine = class=StandardDistributionPolynomialFactory hasSpecificFamily=true specificFamily=class=OrthogonalUniVariatePolynomialFamily implementation=class=ChebychevFactory measure=class=Arcsine name=Arcsine dimension=1 a=-1 b=1 )
Arcsine  polynomial( 0 )= 1
Arcsine  polynomial( 1 )= 1.414 * X
Arcsine  polynomial( 2 )= -1.414 + 2.828 * X^2
Arcsine  polynomial( 3 )= -4.243 * X + 5.657 * X^3
Arcsine  polynomial( 4 )= 1.414 - 11.31 * X^2 + 11.31 * X^4
Arcsine  polynomial( 4 ) roots= [-0.9239,-0.3827,0.3827,0.9239]
Arcsine  polynomial( 4 ) nodes= [-0.9239,-0.3827,0.3827,0.9239]  and weights= [0.25,0.25,0.25,0.25]
M=
 5x5
[[ 1 0 0 0 0 ]
 [ 0 1 0 0 0 ]
 [ 0 0 1 0 0 ]
 [ 0 0 0 1 0 ]
 [ 0 0 0 0 1 ]]
polynomialFactory( UserDefined = class=StandardDistributionPolynomialFactory hasSpecificFamily=false orthonormalization algorithm=class=OrthonormalizationAlgorithm implementation=class=AdaptiveStieltjesAlgorithm measure=class=UserDefined name=UserDefined dimension=1 points=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=10 dimension=1 data=[[0],[1],[2],[3],[4],[5],[6],[7],[8],[9]] probabilities=class=Point name=Unnamed dimension=10 values=[0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1] monicRecurrenceCoefficients=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=2 dimension=3 data=[[1,-4.5,0],[1,-4.5,-8.25]] monicSquaredNorms=class=Point name=Unnamed dimension=2 values=[1,8.25] isElliptical=false )
UserDefined  polynomial( 0 )= 1
UserDefined  polynomial( 1 )= -1.567 + 0.3482 * X
UserDefined  polynomial( 2 )= 1.651 - 1.239 * X + 0.1376 * X^2
UserDefined  polynomial( 3 )= -1.434 + 2.623 * X - 0.7681 * X^2 + 0.0569 * X^3
UserDefined  polynomial( 4 )= 1.064 - 4.435 * X + 2.488 * X^2 - 0.4435 * X^3 + 0.02464 * X^4
UserDefined  polynomial( 4 ) roots= [0.2826,2.853,6.147,8.717]
UserDefined  polynomial( 4 ) nodes= [0.2826,2.853,6.147,8.717]  and weights= [0.1837,0.3163,0.3163,0.1837]
M=
 5x5
[[ 1 0 0 0 0 ]
 [ 0 1 0 0 0 ]
 [ 0 0 1 0 0 ]
 [ 0 0 0 1 0 ]
 [ 0 0 0 0 1 ]]
polynomialFactory( UserDefined = class=StandardDistributionPolynomialFactory hasSpecificFamily=false orthonormalization algorithm=class=OrthonormalizationAlgorithm implementation=class=AdaptiveStieltjesAlgorithm measure=class=UserDefined name=UserDefined dimension=1 points=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=10 dimension=1 data=[[0.5],[1.5],[2.5],[3.5],[4.5],[5.5],[6.5],[7.5],[8.5],[9.5]] probabilities=class=Point name=Unnamed dimension=10 values=[0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1] monicRecurrenceCoefficients=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=2 dimension=3 data=[[1,-5,0],[1,-5,-8.25]] monicSquaredNorms=class=Point name=Unnamed dimension=2 values=[1,8.25] isElliptical=false )
UserDefined  polynomial( 0 )= 1
UserDefined  polynomial( 1 )= -1.741 + 0.3482 * X
UserDefined  polynomial( 2 )= 2.305 - 1.376 * X + 0.1376 * X^2
UserDefined  polynomial( 3 )= -2.945 + 3.434 * X - 0.8535 * X^2 + 0.0569 * X^3
UserDefined  polynomial( 4 )= 3.961 - 7.268 * X + 3.191 * X^2 - 0.4928 * X^3 + 0.02464 * X^4
UserDefined  polynomial( 4 ) roots= [0.7826,3.353,6.647,9.217]
UserDefined  polynomial( 4 ) nodes= [0.7826,3.353,6.647,9.217]  and weights= [0.1837,0.3163,0.3163,0.1837]
M=
 5x5
[[ 1 0 0 0 0 ]
 [ 0 1 0 0 0 ]
 [ 0 0 1 0 0 ]
 [ 0 0 0 1 0 ]
 [ 0 0 0 0 1 ]]
