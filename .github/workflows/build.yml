on:
  push:
    branches: [ master ]
  pull_request:
jobs:
  macos:
    runs-on: macos-latest
    env:
      LDFLAGS: -L/usr/local/opt/openblas/lib
      CPPFLAGS: -I/usr/local/opt/openblas/include
    steps:
    - uses: actions/checkout@v4
    - run: |
        brew upgrade
        brew install openblas swig boost python3 tbb nlopt cminpack ceres-solver bison flex hdf5 ipopt primesieve spectra pagmo
        pip3 install matplotlib scipy chaospy pandas dill
    - run: |
        cd $HOME/work/openturns
        git clone -b 1.9.0 https://github.com/jeromerobert/hmat-oss.git hmat-oss
        cd hmat-oss/
        cmake -DBUILD_EXAMPLES=OFF -DCBLAS_INCLUDE_DIR=/usr/local/opt/openblas/include -DCMAKE_MACOSX_RPATH=ON .
        make install -j3
    - run: |
        cmake \
        -DPython_EXECUTABLE=/usr/local/bin/python3 \
        -DFLEX_EXECUTABLE=/usr/local/opt/flex/bin/flex \
        -DBISON_EXECUTABLE=/usr/local/opt/bison/bin/bison \
        -DCMAKE_CXX_FLAGS="-Wall -Wextra -Werror" \
        -DSWIG_COMPILE_FLAGS="-O1 -Wno-unused-parameter -Wno-unused-function -Wno-deprecated-declarations -Wno-missing-field-initializers" \
        -DCMAKE_UNITY_BUILD=ON -DCMAKE_UNITY_BUILD_BATCH_SIZE=32 .
        make install -j3
        make tests -j3
        OPENTURNS_NUM_THREADS=2 OMP_NUM_THREADS=1 ctest -E GeneralizedParetoFactory_std -j3 --output-on-failure --timeout 100 --schedule-random

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-version: latest
      - name: Install
        shell: cmd
        run: |
          conda install -y cmake swig ninja winflexbison "libblas=*=*netlib" "liblapack=*=*netlib" "liblapacke=*=*netlib" mpc boost-cpp libxml2 hdf5 primesieve tbb-devel hmat-oss cminpack ceres-solver nlopt dlib-cpp ipopt pagmo-devel spectralib zlib scipy pandas matplotlib-base dill
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Build
        shell: cmd
        run: |
          set "LIB=C:\Miniconda3\Library\lib;%LIB%"
          set "INCLUDE=C:\Miniconda3\Library\include;%INCLUDE%"
          cmake -G Ninja -B . -LAH -DCMAKE_INSTALL_PREFIX="C:/Miniconda3/Library" -DLAPACK_LIBRARIES="C:/Miniconda3/Library/lib/lapack.lib" -DCMAKE_UNITY_BUILD=ON -DCMAKE_UNITY_BUILD_BATCH_SIZE=16 -DCMAKE_PREFIX_PATH="C:/Miniconda3/Library" -DPython_FIND_STRATEGY=LOCATION -DPython_ROOT_DIR="C:/Miniconda3"
          cmake --build . --target install --parallel 2
          ctest --output-on-failure --timeout 100 -E cppcheck -j2 --repeat after-timeout:2 --schedule-random

  aarch64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: |
          docker pull openturns/debian-aarch64
          docker run --rm -e MAKEFLAGS='-j2' -v `pwd`:/io openturns/debian-aarch64 /io/.ci_support/run_docker_aarch64.sh
